- content_for :javascripts do
  = javascript_include_tag :ckeditor
  = render :partial => "common/googlemaps"

- unless @article.new_record?
  = render :partial => 'info', :locals => { :article => @article }
= render :partial => "common/flash"

= semantic_form_for setup_article(@article) do |f|
  = f.inputs :class => 'files' do
    = f.semantic_fields_for :medias do |medias_f|
      = render :partial => "edit_media#{'_tpl' if medias_f.object.new_record?}", :locals => {:m => medias_f}
    %li#upload-button-container
      %label
        Her kan du legge til bilder
        #upload-container
          %button#file-upload-button{:type => 'button'} Last opp filer
    = f.input :media_ids_from_async_upload, :as => :hidden,
      :input_html => {:id => 'media-files'}
    - session_key_name = Rails.application.config.session_options[:key]
    = hidden_field_tag session_key_name, cookies[session_key_name], :id => 'session_key_name'



  = f.inputs do
    = f.input :headword, :label => false, :input_html => {:class => 'headword', :'data-tooltip-enable' => true, :title => t('tooltips.articles.headword')}
    = f.input :text, :as => :ckeditor, :label => false, :input_html => { :cols => '80', :class => 'articletext' }
    = f.input :tags
    = f.semantic_fields_for :location, :builder => Maptastic::SemanticFormBuilder do |location_f|
      %li#position
        %label{:for => 'article_location_attributes_latitude_longitude_map_input'}= t('formtastic.labels.location')
        = link_to('#', :id => 'show-map-link', :'data-default-lat' => ENV["MAP_DEFAULT_LAT"], :'data-default-lng' => ENV["MAP_DEFAULT_LNG"], :'data-default-zoom' => ENV["MAP_DEFAULT_ZOOM"]) do
          = image_tag('show-map.png') + content_tag(:span, t('articles.show_map'))
        = link_to(image_tag('hide-map.png') + content_tag(:span, t('articles.hide_map')), '#', :id => 'hide-map-link')
      = location_f.multi_input :latitude, :longitude, :as => :map, :label => false,
        :zoom => :zoom, :search => true, :search_label => t('formtastic.labels.other.maptastic-search'),
        :hint => t('formtastic.labels.other.maptastic-hint')

    = f.input :headword_presentation, :input_html => { :'data-tooltip-enable' => true, :title => t('tooltips.articles.headword_presentation')}
    = f.input :disambiguation, :as => :text, :input_html => { :rows => 4 }
  = f.inputs :name => t('articles.external_links'), :id => 'external-links' do
    = f.semantic_fields_for :external_links do |external_links_f|
      %li
        %ol.link
          = external_links_f.input :href
          = external_links_f.input :text, :wrapper_html => {:class => 'link-text'}
          - unless external_links_f.object.new_record?
            = external_links_f.input :_destroy, :as => :boolean
          - else # There should only be one object getting in here, the one we built in #setup_article helper
            %li
              %button.add{:type => 'button', :value => 'add-link'}= image_tag('icons/add.png', :size => '16x16')
              %button.remove{:type => 'button', :value => 'remove-link'}= image_tag('icons/delete.png', :size => '16x16')


  = f.buttons do
    = f.commit_button
    - unless @article.errors.empty?
      %li
        %p.inline-errors= t('articles.errors.list')
        %ul
          - @article.errors.each do |attr, message|
            %li.inline-errors= link_to(t("articles.#{attr}"), "#article_#{attr}")

%aside.actions
  %ul
    -#%li= button_to t('articles.delete'), @article, :method => :delete, :confirm => t('articles.confirm_delete')
