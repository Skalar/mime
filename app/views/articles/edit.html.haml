- content_for :title do
  ! #{t('articles.editing')} #{@article.headword_presentation}

- content_for :header do
  <em>#{t('articles.edit')}</em> â€“ #{link_to(@article.headword_presentation, pretty_article_path(@article))}

- content_for :javascripts do
  = javascript_include_tag :ckeditor
  = render :partial => "common/googlemaps"

= render :partial => 'info', :locals => { :article => @article }

= render :partial => "common/flash"

= simple_form_for setup_article(@article), html: { novalidate: true } do |f|

  .grid_7

    = f.input :headword, required: false, input_html: { class: 'headword' }

    = f.cktext_area :text

    = f.label :disambiguation
    = f.cktext_area :disambiguation

    = f.input :tags

    = f.label :location
    = f.simple_fields_for :location do |location_f|
      = location_f.hidden_field :latitude
      = location_f.hidden_field :longitude
      = location_f.hidden_field :zoom

    .map-wrapper
      #article_location{data: { :lat => @article.location.lat,
        :lng => @article.location.lng,
        :zoom => @article.location.zoom,
        :'default-lat' => ENV["MAP_DEFAULT_LAT"],
        :'default-lng' => ENV["MAP_DEFAULT_LNG"],
        :'default-zoom' => ENV["MAP_DEFAULT_ZOOM"] }}
      .grid_3.alpha
        = f.hint t('simple_form.hints.map')
      .grid_4.omega
        = f.label :geocoding
        = text_field_tag('geocoding')

    = link_to('#', id: 'show-map-link') do
      = image_tag('show-map.png') + content_tag(:span, t('articles.show_map'))

    = link_to('#', id: 'hide-map-link') do
      = image_tag('hide-map.png') + content_tag(:span, t('articles.hide_map'))

    %fieldset
      %legend
        = f.label :external_links
      = f.simple_fields_for :external_links do |builder|
        = render 'external_link_fields', :f => builder
      .grid_6= add_child_link t('external_links.new'), :external_links
    = new_child_fields_template f, :external_links

  .grid_5
    = f.label :images
    .grid_5.alpha.omega.upload-button
      = link_to t('articles.images.upload'), article_images_path(@article), rel: 'nofollow', class: 'button'
    -#= f.inputs :class => 'files' do
    -#  = f.semantic_fields_for :medias do |medias_f|
    -#    = render :partial => "edit_media#{'_tpl' if medias_f.object.new_record?}", :locals => {:m => medias_f}
    -#  %li#upload-button-container
    -#    %label
    -#      Her kan du legge til bilder
    -#      #upload-container
    -#        %button#file-upload-button{:type => 'button'} Last opp filer
    -#  = f.input :media_ids_from_async_upload, :as => :hidden,
    -#    :input_html => {:id => 'media-files'}
    -#  - session_key_name = Rails.application.config.session_options[:key]
    -#  = hidden_field_tag session_key_name, cookies[session_key_name], :id => 'session_key_name'



  .action-buttons.grid_12
    = f.button :submit
    = link_to t('articles.cancel'), pretty_article_path(@article)
    -# = button_to t('articles.delete'), @article, :method => :delete, :confirm => t('articles.confirm_delete')
